{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\O.wood\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"C:\\\\Users\\\\O.wood\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\O.wood\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\O.wood\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\O.wood\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\O.wood\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\O.wood\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\O.wood\\\\my-app\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Testdad from './components/Testdad';\nimport { Container, Col } from 'reactstrap';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n    _this.state = {\n      itemList: [{\n        title: 'tom',\n        isCheck: true\n      }, {\n        title: 'jerry',\n        isCheck: false\n      }, {\n        title: 'meow',\n        isCheck: false\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"onItemClick\",\n    value: function onItemClick(item) {\n      var _this2 = this;\n\n      return function (event) {\n        var isCheck = item.isCheck;\n        var itemList = _this2.state.itemList;\n        var value = itemList.indexOf(item);\n\n        _this2.setState({\n          itemList: [].concat(_toConsumableArray(itemList.slice(0, value)), [_objectSpread({}, item, {\n            isCheck: !isCheck\n          })], _toConsumableArray(itemList.slice(value + 1)))\n        });\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var itemList = this.state.itemList;\n\n      if (itemList.length) {\n        return React.createElement(Container, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, React.createElement(Col, {\n          sm: {\n            size: 4,\n            offset: 4\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"App\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, itemList.length && itemList.map(function (item, index) {\n          return React.createElement(Testdad, {\n            key: index,\n            name: item,\n            onClick: _this3.onItemClick(item),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          });\n        }))));\n      } else {\n        return React.createElement(\"div\", {\n          className: \"App\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, \" Nothing here\");\n      }\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\O.wood\\my-app\\src\\App.js"],"names":["React","Component","Testdad","Container","Col","App","state","itemList","title","isCheck","item","event","value","indexOf","setState","slice","length","size","offset","map","index","onItemClick"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAAQC,SAAR,EAAmBC,GAAnB,QAA6B,YAA7B;;IAGMC,G;;;;;AACJ,iBAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,KAAL,GAAY;AACZC,MAAAA,QAAQ,EAAG,CACT;AAACC,QAAAA,KAAK,EAAG,KAAT;AAAiBC,QAAAA,OAAO,EAAE;AAA1B,OADS,EAET;AAACD,QAAAA,KAAK,EAAG,OAAT;AAAkBC,QAAAA,OAAO,EAAE;AAA3B,OAFS,EAGT;AAACD,QAAAA,KAAK,EAAG,MAAT;AAAiBC,QAAAA,OAAO,EAAE;AAA1B,OAHS;AADC,KAAZ;AAFY;AASf;;;;gCAGaC,I,EAAK;AAAA;;AACb,aAAM,UAACC,KAAD,EAAW;AACf,YAAIF,OAAO,GAAGC,IAAI,CAACD,OAAnB;AADe,YAERF,QAFQ,GAEI,MAAI,CAACD,KAFT,CAERC,QAFQ;AAGf,YAAMK,KAAK,GAAGL,QAAQ,CAACM,OAAT,CAAiBH,IAAjB,CAAd;;AACA,QAAA,MAAI,CAACI,QAAL,CAAc;AACbP,UAAAA,QAAQ,+BACJA,QAAQ,CAACQ,KAAT,CAAe,CAAf,EAAiBH,KAAjB,CADI,sBAGFF,IAHE;AAILD,YAAAA,OAAO,EAAE,CAACA;AAJL,kCAMJF,QAAQ,CAACQ,KAAT,CAAeH,KAAK,GAAG,CAAvB,CANI;AADK,SAAd;AAWD,OAfD;AAgBH;;;6BAGQ;AAAA;;AAAA,UACAL,QADA,GACY,KAAKD,KADjB,CACAC,QADA;;AAEP,UAAGA,QAAQ,CAACS,MAAZ,EAAmB;AAEjB,eACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,GAAD;AAAK,UAAA,EAAE,EAAE;AAAEC,YAAAA,IAAI,EAAE,CAAR;AAAWC,YAAAA,MAAM,EAAE;AAAnB,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACCX,QAAQ,CAACS,MAAT,IAAmBT,QAAQ,CAACY,GAAT,CACpB,UAACT,IAAD,EAAOU,KAAP;AAAA,iBACA,oBAAC,OAAD;AACE,YAAA,GAAG,EAAIA,KADT;AAEE,YAAA,IAAI,EAAGV,IAFT;AAGE,YAAA,OAAO,EAAI,MAAI,CAACW,WAAL,CAAiBX,IAAjB,CAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAAA,SADoB,CADpB,CAFF,CADF,CADF;AAkBD,OApBD,MAoBK;AACH,eACE;AAAK,UAAA,SAAS,EAAG,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF;AAGD;AAEF;;;;EA7DeT,S;;AAgElB,eAAeI,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Testdad from './components/Testdad';\nimport {Container, Col} from 'reactstrap';\n\n\nclass App extends Component {\n  constructor (){\n    super ();\n    this.state ={\n    itemList : [ \n      {title : 'tom' , isCheck: true},\n      {title : 'jerry', isCheck: false},\n      {title : 'meow', isCheck: false}\n    ]\n  }\n}\n\n\n  onItemClick(item){\n      return(event) => {\n        let isCheck = item.isCheck;\n        const {itemList} = this.state;\n        const value = itemList.indexOf(item);\n        this.setState({\n         itemList : [\n          ...itemList.slice(0,value),\n          {\n            ...item,\n            isCheck: !isCheck\n          },\n          ...itemList.slice(value + 1)\n         ]\n        })\n\n      }\n  }\n\n\n  render() {\n    const {itemList} = this.state\n    if(itemList.length){\n      \n      return (\n        <Container>\n          <Col sm={{ size: 4, offset: 4 }}>\n\n            <div className=\"App\">\n            {itemList.length && itemList.map(\n            (item, index) =>  \n            <Testdad \n              key = {index} \n              name= {item} \n              onClick = {this.onItemClick(item)} />\n            )\n            }\n            </div>\n          \n          </Col>\n        </Container>\n      )\n    }else{\n      return(\n        <div className = \"App\"> Nothing here</div>\n      )\n    }\n    \n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}