{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\O.wood\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"C:\\\\Users\\\\O.wood\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\O.wood\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\O.wood\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\O.wood\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\O.wood\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\O.wood\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\O.wood\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\O.wood\\\\my-app\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Testdad from './components/Testdad';\nimport { Container, Col, Row, Input, Button, UncontrolledTooltip } from 'reactstrap';\nimport classNames from 'classnames';\nimport logoDelete from './components/icon/delete.png';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n    _this.state = {\n      displayStatus: 'all',\n      //finish, unfinish\n      inputText: '',\n      itemList: []\n    };\n    _this.onKeyUp = _this.onKeyUp.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onDelButtonClick = _this.onDelButtonClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.changeStatusAll = _this.changeStatusAll.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.changeStatusFinish = _this.changeStatusFinish.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.changeStatusUnFinish = _this.changeStatusUnFinish.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var listNew = JSON.parse(localStorage.getItem('key'));\n      this.setState({\n        itemList: listNew\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var itemList = this.state.itemList;\n      localStorage.setItem('key', JSON.stringify(itemList));\n    }\n  }, {\n    key: \"onItemClick\",\n    value: function onItemClick(item) {\n      var _this2 = this;\n\n      return function (event) {\n        var isCheck = item.isCheck;\n        var itemList = _this2.state.itemList;\n        var value = itemList.indexOf(item);\n\n        _this2.setState({\n          itemList: [].concat(_toConsumableArray(itemList.slice(0, value)), [_objectSpread({}, item, {\n            isCheck: !isCheck\n          })], _toConsumableArray(itemList.slice(value + 1)))\n        });\n      };\n    }\n  }, {\n    key: \"onKeyUp\",\n    value: function onKeyUp(event) {\n      if (event.keyCode === 13) {\n        var text = event.target.value;\n\n        if (!text) {\n          return;\n        }\n\n        text = text.trim();\n\n        if (!text) {\n          return;\n        }\n\n        this.setState({\n          inputText: '',\n          itemList: [].concat(_toConsumableArray(this.state.itemList), [{\n            title: text,\n            isCheck: false\n          }])\n        });\n      }\n\n      if (event.keyCode === 27) {\n        this.setState(_objectSpread({\n          inputText: ''\n        }, this.state.itemList));\n      }\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(event) {\n      this.setState(_objectSpread({\n        inputText: event.target.value\n      }, this.state.itemList));\n    }\n  }, {\n    key: \"onDelButtonClick\",\n    value: function onDelButtonClick(event) {\n      var itemList = this.state.itemList;\n      var i = 0;\n\n      while (i < itemList.length) {\n        var checkItem = itemList[i];\n\n        if (checkItem.isCheck === true) {\n          var value = itemList.indexOf(checkItem);\n          this.setState(_objectSpread({}, itemList.splice(value, 1)));\n          continue;\n        } else {\n          i++;\n        }\n      }\n    }\n  }, {\n    key: \"changeStatusAll\",\n    value: function changeStatusAll() {\n      this.setState({\n        displayStatus: 'all'\n      });\n    }\n  }, {\n    key: \"changeStatusFinish\",\n    value: function changeStatusFinish() {\n      this.setState({\n        displayStatus: 'finish'\n      });\n    }\n  }, {\n    key: \"changeStatusUnFinish\",\n    value: function changeStatusUnFinish() {\n      this.setState({\n        displayStatus: 'unfinish'\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          itemList = _this$state.itemList,\n          displayStatus = _this$state.displayStatus;\n      var listRender;\n      var holdAll = false;\n      var holdFinish = false;\n      var holdUnfinish = false;\n\n      if (displayStatus === 'all') {\n        listRender = itemList;\n        holdAll = true;\n      } //filter item have finish status\n\n\n      function ReturnFinish(itemFilter) {\n        if (itemFilter.isCheck === true) {\n          return true;\n        }\n\n        return false;\n      }\n\n      if (displayStatus === 'finish') {\n        holdFinish = true;\n        listRender = itemList.filter(ReturnFinish);\n      } //end filter\n      //filter item have unfinish status\n\n\n      function ReturnUnfinish(itemFilter) {\n        if (itemFilter.isCheck === false) {\n          return true;\n        }\n\n        return false;\n      }\n\n      if (displayStatus === 'unfinish') {\n        holdUnfinish = true;\n        listRender = itemList.filter(ReturnUnfinish);\n      } //end filter\n\n\n      if (listRender.length) {\n        return React.createElement(Container, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }, React.createElement(Col, {\n          sm: {\n            size: 4,\n            offset: 4\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"App\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        }, React.createElement(Input, {\n          type: \"text\",\n          placeholder: \"Add new item\",\n          value: this.state.inputText,\n          onChange: this.onChange,\n          onKeyUp: this.onKeyUp,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"Showlist\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          },\n          __self: this\n        }, listRender.length && listRender.map(function (item, index) {\n          return React.createElement(Testdad, {\n            status: _this3.state.displayStatus,\n            key: index,\n            name: item,\n            onClick: _this3.onItemClick(item),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 206\n            },\n            __self: this\n          });\n        })))), React.createElement(Col, {\n          sm: {\n            size: 1\n          },\n          className: \"actionMenu\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216\n          },\n          __self: this\n        }, React.createElement(Button, {\n          outline: true,\n          color: \"danger\",\n          onClick: this.onDelButtonClick,\n          id: \"delete\",\n          className: \"actionButton\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: logoDelete,\n          alt: \"Logo\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          },\n          __self: this\n        })), React.createElement(UncontrolledTooltip, {\n          placement: \"bottom\",\n          target: \"delete\",\n          id: \"tooltip\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218\n          },\n          __self: this\n        }, \"Delete all your finish work\"), React.createElement(Button, {\n          onClick: this.changeStatusAll,\n          className: classNames('actionButton', {\n            'actionButtonOnStatus': holdAll\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219\n          },\n          __self: this\n        }, \" All\"), React.createElement(Button, {\n          onClick: this.changeStatusFinish,\n          className: classNames('actionButton', {\n            'actionButtonOnStatus': holdFinish\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220\n          },\n          __self: this\n        }, \" Finish \"), React.createElement(Button, {\n          onClick: this.changeStatusUnFinish,\n          className: classNames('actionButton', {\n            'actionButtonOnStatus': holdUnfinish\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221\n          },\n          __self: this\n        }, \" Unfinish \"))));\n      }\n\n      if (listRender.length === 0 && displayStatus === 'all') {\n        var nothingItem = {\n          title: 'You have nothing to do',\n          isCheck: false\n        };\n        return React.createElement(Container, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236\n          },\n          __self: this\n        }, React.createElement(Col, {\n          sm: {\n            size: 4,\n            offset: 4\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"App\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239\n          },\n          __self: this\n        }, React.createElement(Input, {\n          type: \"text\",\n          placeholder: \"Add new item\",\n          value: this.state.inputText,\n          onChange: this.onChange,\n          onKeyUp: this.onKeyUp,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"Showlist\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247\n          },\n          __self: this\n        }, React.createElement(Testdad, {\n          name: nothingItem,\n          status: \"nothing\",\n          key: \"0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249\n          },\n          __self: this\n        })))), React.createElement(Col, {\n          sm: {\n            size: 1\n          },\n          className: \"actionMenu\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254\n          },\n          __self: this\n        }, React.createElement(Button, {\n          outline: true,\n          color: \"danger\",\n          onClick: this.onDelButtonClick,\n          id: \"delete\",\n          className: \"actionButton\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: logoDelete,\n          alt: \"Logo\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255\n          },\n          __self: this\n        })), React.createElement(Button, {\n          onClick: this.changeStatusAll,\n          className: classNames('actionButton', {\n            'actionButtonOnStatus': holdAll\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256\n          },\n          __self: this\n        }, \" All\"), React.createElement(Button, {\n          onClick: this.changeStatusFinish,\n          className: classNames('actionButton', {\n            'actionButtonOnStatus': holdFinish\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257\n          },\n          __self: this\n        }, \" Finish \"), React.createElement(Button, {\n          onClick: this.changeStatusUnFinish,\n          className: classNames('actionButton', {\n            'actionButtonOnStatus': holdUnfinish\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258\n          },\n          __self: this\n        }, \" Unfinish \"))));\n      }\n\n      if (listRender.length === 0 && displayStatus === 'finish') {\n        var _nothingItem = {\n          title: \"you don't have finish work\",\n          isCheck: false\n        };\n        return React.createElement(Container, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277\n          },\n          __self: this\n        }, React.createElement(Col, {\n          sm: {\n            size: 4,\n            offset: 4\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"App\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281\n          },\n          __self: this\n        }, React.createElement(Input, {\n          type: \"text\",\n          placeholder: \"Add new item\",\n          value: this.state.inputText,\n          onChange: this.onChange,\n          onKeyUp: this.onKeyUp,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"Showlist\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289\n          },\n          __self: this\n        }, React.createElement(Testdad, {\n          name: _nothingItem,\n          status: \"nothing\",\n          key: \"0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291\n          },\n          __self: this\n        })), React.createElement(Col, {\n          sm: {\n            size: 1\n          },\n          className: \"actionMenu\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 295\n          },\n          __self: this\n        }, React.createElement(Button, {\n          outline: true,\n          color: \"danger\",\n          onClick: this.onDelButtonClick,\n          id: \"delete\",\n          className: \"actionButton\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 296\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: logoDelete,\n          alt: \"Logo\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 296\n          },\n          __self: this\n        })), React.createElement(Button, {\n          onClick: this.changeStatusAll,\n          className: classNames('actionButton', {\n            'actionButtonOnStatus': holdAll\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 297\n          },\n          __self: this\n        }, \" All\"), React.createElement(Button, {\n          onClick: this.changeStatusFinish,\n          className: classNames('actionButton', {\n            'actionButtonOnStatus': holdFinish\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 298\n          },\n          __self: this\n        }, \" Finish \"), React.createElement(Button, {\n          onClick: this.changeStatusUnFinish,\n          className: classNames('actionButton', {\n            'actionButtonOnStatus': holdUnfinish\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 299\n          },\n          __self: this\n        }, \" Unfinish \")))));\n      }\n\n      if (listRender.length === 0 && displayStatus === 'unfinish') {\n        var _nothingItem2 = {\n          title: \"you don't have unfinish work\",\n          isCheck: false\n        };\n        return React.createElement(Container, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 316\n          },\n          __self: this\n        }, React.createElement(Col, {\n          sm: {\n            size: 4,\n            offset: 4\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 318\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"App\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 320\n          },\n          __self: this\n        }, React.createElement(Input, {\n          type: \"text\",\n          placeholder: \"Add new item\",\n          value: this.state.inputText,\n          onChange: this.onChange,\n          onKeyUp: this.onKeyUp,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"Showlist\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 328\n          },\n          __self: this\n        }, React.createElement(Testdad, {\n          name: _nothingItem2,\n          status: \"nothing\",\n          key: \"0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 330\n          },\n          __self: this\n        })), React.createElement(Col, {\n          sm: {\n            size: 1\n          },\n          className: \"actionMenu\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 334\n          },\n          __self: this\n        }, React.createElement(Button, {\n          outline: true,\n          color: \"danger\",\n          onClick: this.onDelButtonClick,\n          id: \"delete\",\n          className: \"actionButton\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 335\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: logoDelete,\n          alt: \"Logo\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 335\n          },\n          __self: this\n        })), React.createElement(Button, {\n          onClick: this.changeStatusAll,\n          className: classNames('actionButton', {\n            'actionButtonOnStatus': holdAll\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 336\n          },\n          __self: this\n        }, \" All\"), React.createElement(Button, {\n          onClick: this.changeStatusFinish,\n          className: classNames('actionButton', {\n            'actionButtonOnStatus': holdFinish\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 337\n          },\n          __self: this\n        }, \"  Finish \"), React.createElement(Button, {\n          onClick: this.changeStatusUnFinish,\n          className: classNames('actionButton', {\n            'actionButtonOnStatus': holdUnfinish\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 338\n          },\n          __self: this\n        }, \" Unfinish \")))));\n      }\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\O.wood\\my-app\\src\\App.js"],"names":["React","Component","Testdad","Container","Col","Row","Input","Button","UncontrolledTooltip","classNames","logoDelete","App","state","displayStatus","inputText","itemList","onKeyUp","bind","onChange","onDelButtonClick","changeStatusAll","changeStatusFinish","changeStatusUnFinish","listNew","JSON","parse","localStorage","getItem","setState","setItem","stringify","item","event","isCheck","value","indexOf","slice","keyCode","text","target","trim","title","i","length","checkItem","splice","listRender","holdAll","holdFinish","holdUnfinish","ReturnFinish","itemFilter","filter","ReturnUnfinish","size","offset","map","index","onItemClick","nothingItem"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Testdad from './components/Testdad';\nimport {Container, Col, Row, Input, Button, UncontrolledTooltip} from 'reactstrap';\nimport classNames from 'classnames';\n\n\nimport logoDelete from './components/icon/delete.png';\n\n\nclass App extends Component {\n  constructor (){\n    super ();\n    this.state = {\n    displayStatus:'all', //finish, unfinish\n    inputText: '',\n    itemList : []\n  }\n\n  this.onKeyUp = this.onKeyUp.bind(this);\n  this.onChange = this.onChange.bind(this);\n  this.onDelButtonClick = this.onDelButtonClick.bind(this);\n\n  this.changeStatusAll = this.changeStatusAll.bind(this);\n  this.changeStatusFinish = this.changeStatusFinish.bind(this);\n  this.changeStatusUnFinish = this.changeStatusUnFinish.bind(this);\n\n}\n\n  componentWillMount(){\n    \n    let listNew = JSON.parse(localStorage.getItem('key'))\n    this.setState({\n      itemList : listNew,\n    })\n  }\n\n\n  componentDidUpdate(){\n    const {itemList} =this.state;\n    localStorage.setItem('key', JSON.stringify(itemList))\n  }\n\n\n\n  onItemClick(item){\n      return(event) => {\n        let isCheck = item.isCheck;\n        const {itemList} = this.state;\n        const value = itemList.indexOf(item);\n        this.setState({\n          itemList : [\n          ...itemList.slice(0,value),\n          {\n            ...item,\n            isCheck: !isCheck\n          },\n          ...itemList.slice(value + 1)\n          ]\n        })\n\n      }\n  }\n\n\n  onKeyUp(event){\n    if(event.keyCode === 13){\n      let text = event.target.value;\n      if(!text){return ;}\n      text = text.trim();\n      if(!text){return ;}\n      this.setState({\n        inputText:'',\n        itemList :[\n          ...this.state.itemList,\n          {title : text , isCheck : false }\n        ]\n      })\n    }\n    if(event.keyCode === 27){\n      this.setState({\n        inputText:'',\n        ...this.state.itemList\n      })\n    }\n  }\n\n\n  onChange(event){\n    \n    this.setState({\n      inputText : event.target.value,\n      ...this.state.itemList\n    })\n  }\n\n  onDelButtonClick(event){\n    const {itemList} = this.state;\n    var i = 0\n\n    while(i < itemList.length){\n\n      var checkItem = itemList[i];\n\n      if(checkItem.isCheck === true ){\n        const value = itemList.indexOf(checkItem);\n\n        this.setState({\n          ...itemList.splice(value,1)\n        })\n        continue;\n      }\n\n      else{i++}\n    }\n\n  }\n\n\n  changeStatusAll(){\n    this.setState({\n      displayStatus: 'all'\n    })\n  }\n\n  changeStatusFinish(){\n    this.setState({\n      displayStatus: 'finish'\n    })\n  }\n\n  changeStatusUnFinish(){\n    this.setState({\n      displayStatus: 'unfinish'\n    })\n  }\n\n\n  render() {\n    const {itemList, displayStatus} = this.state\n    var listRender;\n\n    var holdAll =false;\n    var holdFinish = false;\n    var holdUnfinish =false;\n\n    if(displayStatus === 'all'){\n      listRender = itemList;\n      holdAll = true;\n    }\n\n\n    //filter item have finish status\n\n    function ReturnFinish(itemFilter){\n      if(itemFilter.isCheck === true){\n        return true;\n      }\n      return false;\n    }\n\n    if(displayStatus === 'finish'){\n      holdFinish =true;\n      listRender = itemList.filter(ReturnFinish)\n\n    }\n    //end filter\n\n    //filter item have unfinish status\n\n    function ReturnUnfinish(itemFilter){\n      if(itemFilter.isCheck === false){\n        return true;\n      }\n      return false;\n    }\n\n    if(displayStatus === 'unfinish'){\n      holdUnfinish =true;\n      listRender = itemList.filter(ReturnUnfinish)\n    }\n    \n    //end filter\n    \n\n    if(listRender.length){      \n      return (\n        <Container>\n\n          <Row>\n            <Col sm={{ size: 4, offset: 4 }}>\n\n              <div className=\"App\">\n                <Input \n                  type=\"text\" \n                  placeholder=\"Add new item\" \n                  value = {this.state.inputText}\n                  onChange = {this.onChange}\n                  onKeyUp = {this.onKeyUp} />\n\n                <div className=\"Showlist\">\n\n                  {\n                  listRender.length && listRender.map(\n                  (item, index) =>  \n                  <Testdad \n                    status = {this.state.displayStatus}\n                    key = {index} \n                    name= {item} \n                    onClick = {this.onItemClick(item)} />\n                  )}\n\n                </div>\n              </div>\n            </Col>    \n            <Col sm = {{size: 1}} className =\"actionMenu\">  \n              <Button outline color=\"danger\" onClick = {this.onDelButtonClick} id=\"delete\" className=\"actionButton\"><img src={logoDelete} alt=\"Logo\" /></Button>\n              <UncontrolledTooltip placement=\"bottom\" target=\"delete\" id=\"tooltip\" >Delete all your finish work</UncontrolledTooltip>\n              <Button onClick = {this.changeStatusAll} className={classNames('actionButton', {'actionButtonOnStatus': holdAll})}> All</Button>\n              <Button onClick = {this.changeStatusFinish} className={classNames('actionButton', {'actionButtonOnStatus': holdFinish})}> Finish </Button>\n              <Button onClick = {this.changeStatusUnFinish} className={classNames('actionButton', {'actionButtonOnStatus': holdUnfinish})}> Unfinish </Button>\n            </Col>\n          </Row>    \n            \n          \n          \n        </Container>\n      )\n    }\n    if(listRender.length === 0 && displayStatus === 'all'){\n\n      const nothingItem = {title: 'You have nothing to do', isCheck: false} \n\n      return (\n        <Container>\n          <Row>\n            <Col sm={{ size: 4, offset: 4 }}>\n\n              <div className=\"App\">\n                <Input \n                  type=\"text\" \n                  placeholder=\"Add new item\" \n                  value = {this.state.inputText}\n                  onChange = {this.onChange}\n                  onKeyUp = {this.onKeyUp} />\n\n                <div className=\"Showlist\">\n\n                  <Testdad  name = {nothingItem}  status = 'nothing' key  =\"0\"/>\n              \n                  </div>\n                </div>\n                </Col>  \n                <Col sm = {{size: 1}} className =\"actionMenu\">  \n                  <Button outline color=\"danger\" onClick = {this.onDelButtonClick} id=\"delete\" className=\"actionButton\"><img src={logoDelete} alt=\"Logo\" /></Button>\n                  <Button onClick = {this.changeStatusAll} className={classNames('actionButton', {'actionButtonOnStatus': holdAll})}> All</Button>\n                  <Button onClick = {this.changeStatusFinish} className={classNames('actionButton', {'actionButtonOnStatus': holdFinish})}> Finish </Button>\n                  <Button onClick = {this.changeStatusUnFinish} className={classNames('actionButton', {'actionButtonOnStatus': holdUnfinish})}> Unfinish </Button>\n                </Col>\n              \n            \n            \n          </Row>\n        </Container>\n      )\n    \n    }\n\n\n\n\n    if(listRender.length === 0 && displayStatus === 'finish'){\n\n      const nothingItem = {title: \"you don't have finish work\", isCheck: false} \n\n      return (\n        <Container>\n\n          <Col sm={{ size: 4, offset: 4 }}>\n\n            <div className=\"App\">\n              <Input \n                type=\"text\" \n                placeholder=\"Add new item\" \n                value = {this.state.inputText}\n                onChange = {this.onChange}\n                onKeyUp = {this.onKeyUp} />\n\n              <div className=\"Showlist\">\n\n                <Testdad  name = {nothingItem}  status = 'nothing' key  =\"0\"/>\n            \n\n              </div>\n              <Col sm = {{size: 1}} className =\"actionMenu\">  \n                <Button outline color=\"danger\" onClick = {this.onDelButtonClick} id=\"delete\" className=\"actionButton\"><img src={logoDelete} alt=\"Logo\" /></Button>\n                <Button onClick = {this.changeStatusAll} className={classNames('actionButton', {'actionButtonOnStatus': holdAll})}> All</Button>\n                <Button onClick = {this.changeStatusFinish} className={classNames('actionButton', {'actionButtonOnStatus': holdFinish})}> Finish </Button>\n                <Button onClick = {this.changeStatusUnFinish} className={classNames('actionButton', {'actionButtonOnStatus': holdUnfinish})}> Unfinish </Button>\n              </Col>\n            </div>\n          \n          </Col>\n        </Container>\n      )\n    \n    }\n\n\n\n    if(listRender.length === 0 && displayStatus === 'unfinish'){\n\n      const nothingItem = {title: \"you don't have unfinish work\", isCheck: false} \n\n      return (\n        <Container>\n\n          <Col sm={{ size: 4, offset: 4 }}>\n\n            <div className=\"App\">\n              <Input \n                type=\"text\" \n                placeholder=\"Add new item\" \n                value = {this.state.inputText}\n                onChange = {this.onChange}\n                onKeyUp = {this.onKeyUp} />\n\n              <div className=\"Showlist\">\n\n                <Testdad  name = {nothingItem}  status = 'nothing' key  =\"0\"/>\n            \n\n              </div>\n              <Col sm = {{size: 1}} className =\"actionMenu\">  \n                <Button outline color=\"danger\" onClick = {this.onDelButtonClick} id=\"delete\" className=\"actionButton\"><img src={logoDelete} alt=\"Logo\" /></Button>\n                <Button onClick = {this.changeStatusAll} className={classNames('actionButton', {'actionButtonOnStatus': holdAll})}> All</Button>\n                <Button onClick = {this.changeStatusFinish} className={classNames('actionButton', {'actionButtonOnStatus': holdFinish})}>  Finish </Button>\n                <Button onClick = {this.changeStatusUnFinish} className={classNames('actionButton', {'actionButtonOnStatus': holdUnfinish})}> Unfinish </Button>\n              </Col>\n            </div>\n          \n          </Col>\n        </Container>\n      )\n    \n    }\n  \n  \n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}