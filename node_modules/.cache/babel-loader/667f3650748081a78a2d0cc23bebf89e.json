{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\O.wood\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"C:\\\\Users\\\\O.wood\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\O.wood\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\O.wood\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\O.wood\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\O.wood\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\O.wood\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\O.wood\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\O.wood\\\\my-app\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Testdad from './components/Testdad';\nimport { Container, Col, Input, Button } from 'reactstrap';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n    _this.state = {\n      displayStatus: 'all',\n      inputText: '',\n      itemList: []\n    };\n    _this.onKeyUp = _this.onKeyUp.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onDelButtonClick = _this.onDelButtonClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.changeStatusAll = _this.changeStatusAll.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.changeStatusFinish = _this.changeStatusFinish.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.changeStatusUnFinish = _this.changeStatusUnFinish.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var listNew = JSON.parse(localStorage.getItem('key'));\n      this.setState({\n        itemList: listNew\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var itemList = this.state.itemList;\n      localStorage.setItem('key', JSON.stringify(itemList));\n    }\n  }, {\n    key: \"onItemClick\",\n    value: function onItemClick(item) {\n      var _this2 = this;\n\n      return function (event) {\n        var isCheck = item.isCheck;\n        var itemList = _this2.state.itemList;\n        var value = itemList.indexOf(item);\n\n        _this2.setState({\n          itemList: [].concat(_toConsumableArray(itemList.slice(0, value)), [_objectSpread({}, item, {\n            isCheck: !isCheck\n          })], _toConsumableArray(itemList.slice(value + 1)))\n        });\n      };\n    }\n  }, {\n    key: \"onKeyUp\",\n    value: function onKeyUp(event) {\n      if (event.keyCode === 13) {\n        var text = event.target.value;\n\n        if (!text) {\n          return;\n        }\n\n        text = text.trim();\n\n        if (!text) {\n          return;\n        }\n\n        this.setState({\n          inputText: '',\n          itemList: [].concat(_toConsumableArray(this.state.itemList), [{\n            title: text,\n            isCheck: false\n          }])\n        });\n      }\n\n      if (event.keyCode === 27) {\n        this.setState(_objectSpread({\n          inputText: ''\n        }, this.state.itemList));\n      }\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(event) {\n      this.setState(_objectSpread({\n        inputText: event.target.value\n      }, this.state.itemList));\n    }\n  }, {\n    key: \"onDelButtonClick\",\n    value: function onDelButtonClick(event) {\n      var itemList = this.state.itemList;\n      var i = 0;\n\n      while (i < itemList.length) {\n        var checkItem = itemList[i];\n\n        if (checkItem.isCheck === true) {\n          var value = itemList.indexOf(checkItem);\n          this.setState(_objectSpread({}, itemList.splice(value, 1)));\n          continue;\n        } else {\n          i++;\n        }\n      }\n    }\n  }, {\n    key: \"changeStatusAll\",\n    value: function changeStatusAll() {\n      this.setState({\n        displayStatus: 'all'\n      });\n    }\n  }, {\n    key: \"changeStatusFinish\",\n    value: function changeStatusFinish() {\n      this.setState({\n        displayStatus: 'finish'\n      });\n    }\n  }, {\n    key: \"changeStatusUnFinish\",\n    value: function changeStatusUnFinish() {\n      this.setState({\n        displayStatus: 'unfinish'\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          itemList = _this$state.itemList,\n          displayStatus = _this$state.displayStatus;\n      var listRender;\n\n      if (displayStatus === 'all') {\n        listRender = itemList;\n      }\n\n      function ReturnFinish(itemFilter) {\n        if (itemFilter.isCheck === true) {\n          return true;\n        }\n\n        return false;\n      }\n\n      if (displayStatus === 'finish') {\n        listRender = itemList.filter(ReturnFinish);\n      }\n\n      function ReturnUnfinish(itemFilter) {\n        if (itemFilter.isCheck === false) {\n          return true;\n        }\n\n        return false;\n      }\n\n      if (displayStatus === 'unfinish') {\n        listRender = itemList.filter(ReturnUnfinish);\n      }\n\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: {\n          size: 4,\n          offset: 4\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        placeholder: \"Add new item\",\n        value: this.state.inputText,\n        onChange: this.onChange,\n        onKeyUp: this.onKeyUp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"Showlist\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, listRender.length && listRender.map(function (item, index) {\n        return React.createElement(Testdad, {\n          status: _this3.state.displayStatus,\n          key: index,\n          name: item,\n          onClick: _this3.onItemClick(item),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        });\n      })), React.createElement(Button, {\n        color: \"danger\",\n        onClick: this.onDelButtonClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"Delete\"), React.createElement(Button, {\n        onClick: this.changeStatusAll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \" All\"), React.createElement(Button, {\n        onClick: this.changeStatusFinish,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \" Finish \"), React.createElement(Button, {\n        onClick: this.changeStatusUnFinish,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \" Unfinish \"))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\O.wood\\my-app\\src\\App.js"],"names":["React","Component","Testdad","Container","Col","Input","Button","App","state","displayStatus","inputText","itemList","onKeyUp","bind","onChange","onDelButtonClick","changeStatusAll","changeStatusFinish","changeStatusUnFinish","listNew","JSON","parse","localStorage","getItem","setState","setItem","stringify","item","event","isCheck","value","indexOf","slice","keyCode","text","target","trim","title","i","length","checkItem","splice","listRender","ReturnFinish","itemFilter","filter","ReturnUnfinish","size","offset","map","index","onItemClick"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Testdad from './components/Testdad';\nimport {Container, Col, Input, Button} from 'reactstrap';\n\n\nclass App extends Component {\n  constructor (){\n    super ();\n    this.state = {\n    displayStatus:'all',\n    inputText: '',\n    itemList : []\n  }\n\n  this.onKeyUp = this.onKeyUp.bind(this);\n  this.onChange = this.onChange.bind(this);\n  this.onDelButtonClick = this.onDelButtonClick.bind(this);\n\n  this.changeStatusAll = this.changeStatusAll.bind(this);\n  this.changeStatusFinish = this.changeStatusFinish.bind(this);\n  this.changeStatusUnFinish = this.changeStatusUnFinish.bind(this);\n\n}\n\n  componentWillMount(){\n    \n    let listNew = JSON.parse(localStorage.getItem('key'))\n    this.setState({\n      itemList : listNew,\n    })\n  }\n\n\n  componentDidUpdate(){\n    const {itemList} =this.state;\n    localStorage.setItem('key', JSON.stringify(itemList))\n  }\n\n\n\n  onItemClick(item){\n      return(event) => {\n        let isCheck = item.isCheck;\n        const {itemList} = this.state;\n        const value = itemList.indexOf(item);\n        this.setState({\n          itemList : [\n          ...itemList.slice(0,value),\n          {\n            ...item,\n            isCheck: !isCheck\n          },\n          ...itemList.slice(value + 1)\n          ]\n        })\n\n      }\n  }\n\n\n  onKeyUp(event){\n    if(event.keyCode === 13){\n      let text = event.target.value;\n      if(!text){return ;}\n      text = text.trim();\n      if(!text){return ;}\n      this.setState({\n        inputText:'',\n        itemList :[\n          ...this.state.itemList,\n          {title : text , isCheck : false }\n        ]\n      })\n    }\n    if(event.keyCode === 27){\n      this.setState({\n        inputText:'',\n        ...this.state.itemList\n      })\n    }\n  }\n\n\n  onChange(event){\n    \n    this.setState({\n      inputText : event.target.value,\n      ...this.state.itemList\n    })\n  }\n\n  onDelButtonClick(event){\n    const {itemList} = this.state;\n    var i = 0\n\n    while(i < itemList.length){\n\n      var checkItem = itemList[i];\n\n      if(checkItem.isCheck === true ){\n        const value = itemList.indexOf(checkItem);\n\n        this.setState({\n          ...itemList.splice(value,1)\n        })\n        continue;\n      }\n\n      else{i++}\n    }\n\n  }\n\n\n  changeStatusAll(){\n    this.setState({\n      displayStatus: 'all'\n    })\n  }\n\n  changeStatusFinish(){\n    this.setState({\n      displayStatus: 'finish'\n    })\n  }\n\n  changeStatusUnFinish(){\n    this.setState({\n      displayStatus: 'unfinish'\n    })\n  }\n\n\n  render() {\n    const {itemList, displayStatus} = this.state\n    var listRender;\n\n    if(displayStatus === 'all'){\n      listRender = itemList\n    }\n\n\n    function ReturnFinish(itemFilter){\n      if(itemFilter.isCheck === true){\n        return true;\n      }\n      return false;\n    }\n\n    if(displayStatus === 'finish'){\n      listRender = itemList.filter(ReturnFinish)\n    }\n\n    function ReturnUnfinish(itemFilter){\n      if(itemFilter.isCheck === false){\n        return true;\n      }\n      return false;\n    }\n\n    if(displayStatus === 'unfinish'){\n      listRender = itemList.filter(ReturnUnfinish)\n    }\n      \n      return (\n        <Container>\n          <Col sm={{ size: 4, offset: 4 }}>\n\n            <div className=\"App\">\n              <Input \n                type=\"text\" \n                placeholder=\"Add new item\" \n                value = {this.state.inputText}\n                onChange = {this.onChange}\n                onKeyUp = {this.onKeyUp} />\n\n              <div className=\"Showlist\">\n                {\n                listRender.length && listRender.map(\n                (item, index) =>  \n                <Testdad \n                  status = {this.state.displayStatus}\n                  key = {index} \n                  name= {item} \n                  onClick = {this.onItemClick(item)} />\n                )\n                }\n              </div>\n              <Button color=\"danger\" onClick = {this.onDelButtonClick}>Delete</Button>\n              <Button onClick = {this.changeStatusAll}> All</Button>\n              <Button onClick = {this.changeStatusFinish}> Finish </Button>\n              <Button onClick = {this.changeStatusUnFinish}> Unfinish </Button>\n            </div>\n          \n          </Col>\n        </Container>\n      )\n\n    \n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}